# All units are in SI
# ===================
# Time:     second, hz
# Angle:    radian
# Distance: meter

navigation:
  ros__parameters:
    pub_path_rate: 1.0
    # How many state machine iterations per second
    update_rate: 60.0

    # How long it takes to forget about a target
    # Useful if the rover turns away from the target for a brief moment
    # Or if there was an ephemeral false positive detection
    target_expiration_duration: 60.0

    image_targets:
      increment_weight: 5
      decrement_weight: 1
      min_hits: 3 # TODO(quintin): This is not used, see corresponding comment in context.py
      max_hits: 10

    drive:
      max_driving_effort: 0.35
      min_driving_effort: -0.35
      max_turning_effort: 0.5
      min_turning_effort: -0.5
      turning_p: 3.0
      driving_p: 20.0
      lookahead_distance: 1.0

    long_range:
      distance_ahead: 20.0
      time_threshold: 5.0
      increment_weight: 5.0
      decrement_weight: 1.0
      min_hits: 3.0
      max_hits: 10.0


    waypoint:
      stop_threshold: 0.5
      drive_forward_threshold: 0.34

    water_bottle_search:
      use_costmap: true
      stop_threshold: 0.5
      drive_forward_threshold: 0.34
      coverage_radius: 10.0
      segments_per_rotation: 8
      distance_between_spirals: 3.0
      traversable_cost: 0.2
      update_delay: 2.0
      safe_approach_distance: 1.5

    search:
      stop_threshold: 0.5
      drive_forward_threshold: 0.34
      coverage_radius: 20.0
      segments_per_rotation: 8
      distance_between_spirals: 3.0

    object_search:
      coverage_radius: 10.0
      distance_between_spirals: 3.0

    single_tag:
      stop_threshold: 1.0
      tag_stop_threshold: 1.75
      post_avoidance_multiplier: 1.42
      post_radius: 0.7

    recovery:
      stop_threshold: 0.2
      drive_forward_threshold: 0.34
      recovery_distance: 2.0 # Distance the rover moves back in each leg of j-turn
      give_up_time: 10.0

    # TODO(quintin): Avoid storing these in multiple config files
    ref_lat: 42.293195
    ref_lon: -83.7096706
    ref_alt: 0.0
    world_frame: "map"
    rover_frame: "base_link"

stuck_detector:
  ros__parameters:
    # How many readings to consider the rover stuck
    # NOTE(quintin): This is probably bad since it depends on the data publishing rate...
    #                May want to refactor this to be time based
    window_size: 30
    # How long to wait until the stuck detection can trigger again after the last one
    post_recovery_grace_period: 5.0
    # If the rover is being commanded to move, it must be below both of these thresholds to be considered stuck
    angular_vel_thresh: 0.08
    linear_vel_thresh: 0.16
    # Clear the window if the time since last data is greater than this
    data_watchdog_timeout: 1.0

debug_course_publisher:
  ros__parameters:
    # TODO(quintin): Avoid storing these in multiple config files
    ref_lat: 42.293195
    ref_lon: -83.7096706
    ref_alt: 0.0
